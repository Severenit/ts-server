import { sendLogToTelegram } from './error.js';

// Map –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
const requestCounts = new Map();

// Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–≥—Ä
const nonExistentGames = new Set();

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 * @param gameId - ID –∏–≥—Ä—ã
 * @param telegramData - –î–∞–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º
 * @param request - –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
 * @returns true –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω—É–∂–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
 */
export async function logRequest(gameId: string, telegramData: string, request: any): Promise<boolean> {
  const key = `${gameId}_${request.info.remoteAddress}`;
  const count = (requestCounts.get(key) || 0) + 1;
  requestCounts.set(key, count);

  if (count > 10) { // –ï—Å–ª–∏ –±–æ–ª—å—à–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –æ–¥–Ω–æ–≥–æ IP –∫ –æ–¥–Ω–æ–π –∏–≥—Ä–µ
    await sendLogToTelegram('üö® –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', {
      gameId,
      ip: request.info.remoteAddress,
      userAgent: request.headers['user-agent'],
      requestCount: count,
      path: request.path,
      method: request.method,
      timestamp: new Date().toISOString(),
      referer: request.headers.referer || 'unknown',
      telegramData,
    });

    // –ï—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    if (nonExistentGames.has(gameId)) {
      return true; // –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    }
  }
  return false;
}

export { nonExistentGames }; 